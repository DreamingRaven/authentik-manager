{{- if .Values.authentik.config.generate }}
{{- $ldapDCList := (splitList "." .Values.global.domain.base )}}
# ldapDCList: {{ $ldapDCList }}
{{- $ldapDC := (printf "DC=%s" (join ",DC=" $ldapDCList ))}}
# ldapDC: {{ $ldapDC }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.authentik.config.name }}
  labels:
    {{- include "ak.labels" . | nindent 4 }}
data:
  # DC=Domain Controller
  # CN=Common Name
  {{ .Values.authentik.config.file }}: |
    theme: dark
    # jwt_secret: <set via secret>
    # default_redirection_url: https://{{ .Values.global.domain.ldap }}
    #
    # server:
    #   host: 0.0.0.0
    #   port: {{ (first .Values.authentik.ports).containerPort }}
    #   path: ""
    #   buffers:
    #     read: 4096
    #     write: 4096
    #   enable_pprof: false
    #   enable_expvars: false
    #   disable_healthcheck: false
    #   tls:
    #     key: ""
    #     certificate: ""
    #
    # log:
    #   level: debug
    #
    # totp:
    #   issuer: {{ .Values.global.domain.base }}
    #   period: 30
    #   skew: 1
    #
    # access_control:
    #   default_policy: deny
    #   rules:
    #     ## bypass rule
    #     - domain:
    #         - "{{ .Values.global.domain.full }}"
    #       policy: bypass
    #     - domain:
    #         - "{{ .Values.global.domain.ldap }}"
    #       policy: bypass
    #     ## catch-all
    #     - domain:
    #         - "*.{{ .Values.global.domain.base }}"
    #       subject:
    #         - "group:admins"
    #       policy: one_factor
    #
    # #https://docs.ibracorp.io/authelia/ldap/ldap-openldap
    # #https://stackoverflow.com/a/61818952/11164973
    # #https://www.authelia.com/configuration/first-factor/ldap/
    # #https://learn.microsoft.com/en-us/windows/win32/ad/core-concepts-of-active-directory-domain-services
    # #https://learn.microsoft.com/en-us/windows/win32/ad/naming-properties
    # #https://www.digitalocean.com/community/tutorials/how-to-manage-and-use-ldap-servers-with-openldap-utilities
    # authentication_backend:
    #   password_reset:
    #     disable: false
    #   refresh_interval: 1m
    #   ldap:
    #     implementation: custom
    #     # implementation: activedirectory
    #     url: ldap://{{ .Values.ldap.service.name }}:{{ (first .Values.ldap.ports).servicePort }}
    #     timeout: 5s
    #     start_tls: false
    #     tls:
    #       server_name: {{ .Values.global.domain.base }}
    #       skip_verify: false
    #       minimum_version: TLS1.2
    #     base_dn: {{ $ldapDC }}
    #     # e.g:
    #     # base_dn: DC=deepcypher,DC=me
    #     username_attribute: uid
    #     # You need to set this to ou=people, because all users are stored in this ou!
    #     additional_users_dn: ou=people
    #     # users_filter: (&({username_attribute}={input})(objectClass=person))
    #     users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    #     # # Set this to ou=groups, because all groups are stored in this ou
    #     additional_groups_dn: ou=groups
    #     # Only this filter is supported right now
    #     groups_filter: "(member={dn})"
    #     # groups_filter: (&(member={dn})(objectClass=groupOfNames))
    #     group_name_attribute: cn
    #     mail_attribute: mail
    #     display_name_attribute: displayName
    #     user: CN=admin,OU=people,{{ $ldapDC }}
    #     # password: <set via secret>
    #
    # session:
    #   name: authentik_session
    #   domain: {{ .Values.global.domain.base }}
    #   same_site: lax
    #   # secret: <set via secret>
    #   expiration: 1h
    #   inactivity: 5m
    #   remember_me_duration: 2M
    #   redis:
    #     host: {{ .Values.redis.fullnameOverride }}-master
    #     port: 6379
    #     # username: admin
    #     # password: <set via secret>
    #     database_index: 0
    #     maximum_active_connections: 10
    #     minimum_idle_connections: 0
    #
    # regulation:
    #   max_retries: 3
    #   find_time: 10m
    #   ban_time: 12h
    #
    # storage:
    #   # encryption_key: <set via secret>
    #   postgres:
    #     host: {{ .Values.postgresql.fullnameOverride }}-hl
    #     port: {{ .Values.postgresql.postgresql.service.ports.postgresql }}
    #     database: {{ .Values.postgresql.auth.database }}
    #     schema: public
    #     username: {{ .Values.postgresql.auth.username }}
    #     # password: <set via secret>
    #     timeout: 5s
    #
    # notifier:
    #   disable_startup_check: false
    #   {{- if .Values.smtp.enabled }}
    #   smtp:
    #     username: {{ .Values.smtp.username }}
    #     # password: <set via secret>
    #     host: {{ .Values.smtp.host }}
    #     port: {{ .Values.smtp.port }}
    #     sender: {{ .Values.smtp.from }}
    #     identifier: localhost
    #     subject: "[authentik {{ .Values.global.domain.base }}] {title}"
    #     startup_check_address: {{ .Values.smtp.from }}
    #     disable_require_tls: false
    #     disable_html_emails: false
    #     tls:
    #       skip_verify: false
    #       minimum_version: TLS1.2
    #   {{- else }}
    #   # this is only for proof-of-concept installs please ensure SMTP is actually used in production
    #   filesystem:
    #     filename: {{ .Values.authentik.config.noteFile }}
    #   {{- end }}
{{- end }}
